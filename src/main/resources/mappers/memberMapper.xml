<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.tryIt.mapper.KKY_MemberMapper">

	<resultMap id="memberMap" type="com.tryIt.domain.KKY_MemberVO">
		<result column="user_id" property="user_id"></result>
		<result column="user_pw" property="user_pw"></result>
		<result column="user_email" property="user_email"></result>
		<result column="user_name" property="user_name"></result>
		<result column="user_nickname" property="user_nickname"></result>
		<result column="user_address" property="user_address"></result>
		<result column="user_detail_address" property="user_detail_address"></result>
		<result column="user_zipcode" property="user_zipcode"></result>
		<result column="user_phonenum" property="user_phonenum"></result>
		<result column="user_join_date" property="user_join_date"></result>
		<result column="user_yn" property="user_yn"></result>
		<result column="role" property="role"></result>
	</resultMap>
    
    <select id="loginMember" resultType="com.tryIt.domain.KKY_MemberVO">
		<![CDATA[select id,user_id,
						aes_decrypt(unhex(user_pw), 'key') as user_pw,
						user_email, 
						user_name, 
						user_nickname, 
						user_phonenum, 
						user_zipcode, 
						user_address, 
						user_detail_address,
						role from userinfo where user_id = #{user_id} and user_pw = hex(aes_encrypt(#{user_pw}, 'key'))]]>
    </select>   
    
    <insert id="createMember">
    	<![CDATA[
	    	insert into userinfo(user_id, user_pw, user_email, user_name, user_nickname, user_phonenum, user_zipcode, user_address, user_detail_address)
			values (#{user_id}, hex(aes_encrypt(#{user_pw}, 'key')), #{user_email}, #{user_name}, #{user_nickname}, #{user_phonenum}, #{user_zipcode}, #{user_address}, #{user_detail_address})
		]]>
    </insert>
    
    <update id="updateMember">
    	<![CDATA[
    		update userinfo set user_email = #{user_email}, 
    							user_nickname = #{user_nickname}, 
    							user_pw = hex(aes_encrypt(#{user_pw}, 'key')), 
    							user_zipcode = #{user_zipcode}, 
    							user_address = #{user_address},
    							user_detail_address = #{user_detail_address},
    							user_phonenum = #{user_phonenum} where user_id = #{user_id}
    	]]>
    </update>
    
    <update id="updatePw">
    	<![CDATA[update userinfo set user_pw = hex(aes_encrypt(#{pw}, 'key')) where user_id = #{user_id}]]>
    </update>

    <select id="readMember" resultType="com.tryIt.domain.KKY_MemberVO">
    	<![CDATA[select user_id,
						aes_decrypt(unhex(user_pw), 'key') as user_pw,
						user_email,
						user_name,
						user_nickname,
						user_phonenum,
						user_zipcode,
						user_address,
						user_detail_address from userinfo where user_id = #{user_id}]]>
    </select>

	<select id="readMember2" resultType="com.tryIt.domain.KKY_MemberVO">
		<![CDATA[select * from userinfo where user_name = #{user_name} and user_email = #{user_email}]]>
	</select>

    <select id="overLappedID" resultType="String">
    	<![CDATA[select if(count(*) = 1, "true", "false") from userinfo where user_id = #{user_id}]]>
    </select>
    
    <select id="overLappedNickName" resultType="String">
    	<![CDATA[select if(count(*) = 1, "true", "false") from userinfo where user_nickname = #{user_nickname}]]>
    </select>

	<select id="findByUserId" resultType = "com.tryIt.domain.KKY_MemberVO">
		select * from userinfo where id = #{member_id}
	</select>



    <delete id="deleteMember">
    	<![CDATA[delete from userinfo where user_id = #{user_id} and user_pw = hex(aes_encrypt(#{user_pw}, 'key'))]]>
    </delete>

</mapper>